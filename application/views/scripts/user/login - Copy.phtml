<script>
require(["dojo/parser", "dijit/Fieldset"]);
</script>
<script>
  // Additional JS functions here
  window.fbAsyncInit = function() {
	FB.init({
	  appId      : '188317251310377', // App ID
	  oauth: true,
	  channelUrl : 'http://www.mysocialrea.com/default/facebook/xdreceiver', // Channel File
	  status     : true, // check login status
	  cookie     : true, // enable cookies to allow the server to access the session
	  xfbml      : true  // parse XFBML
	});
	
	// Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
  // for any authentication related change, such as login, logout or session refresh. This means that
  // whenever someone who was previously logged out tries to log in again, the correct case below 
  // will be handled. 
  FB.Event.subscribe('auth.authResponseChange', function(response) {
	// Here we specify what we do with the response anytime this event occurs. 
	if (response.status === 'connected') {
	  // The response object is returned with a status field that lets the app know the current
	  // login status of the person. In this case, we're handling the situation where they 
	  // have logged in to the app.
	  /*
	  require(["mysa/layout/Template", "dojo/dom", "dojo/dom-construct", "dojo/ready",  "dojo/domReady!"],
		function(Template, dom, domConstruct, ready){
			var temp = new Template(<?php //echo $this->layout()->layoutVariables; ?>, dom.byId("l-fb-holder").innerHTML);
			temp.SignedIn();		
		});
		FB.XFBML.parse(document.getElementById("auth-status"));
		*/
	 //alert(response.status);
	  //testAPI();
	} else if (response.status === 'not_authorized') {
	  // In this case, the person is logged into Facebook, but not into the app, so we call
	  // FB.login() to prompt them to do so. 
	  // In real-life usage, you wouldn't want to immediately prompt someone to login 
	  // like this, for two reasons:
	  // (1) JavaScript created popup windows are blocked by most browsers unless they 
	  // result from direct interaction from people using the app (such as a mouse click)
	  // (2) it is a bad experience to be continually prompted to login upon page load.
	  /*
	  require(["mysa/layout/Template", "dojo/dom", "dojo/dom-construct", "dojo/ready",  "dojo/domReady!"],
		function(Template, dom, domConstruct, ready){
			var temp = new Template(<?php //echo $this->layout()->layoutVariables; ?>, dom.byId("l-fb-holder").innerHTML);
			temp.NotSignedIn();		
		});
		*/
	  FB.login();
	} else {
	  // In this case, the person is not logged into Facebook, so we call the login() 
	  // function to prompt them to do so. Note that at this stage there is no indication
	  // of whether they are logged into the app. If they aren't then they'll see the Login
	  // dialog right after they log in to Facebook. 
	  // The same caveats as above apply to the FB.login() call here.
	  /*
	  require(["mysa/layout/Template", "dojo/dom", "dojo/dom-construct", "dojo/ready",  "dojo/domReady!"],
		function(Template, dom, domConstruct, ready){
			dom.byId("l-subheader-3").innerHTML = "";
			var temp = new Template(<?php //echo $this->layout()->layoutVariables; ?>, dom.byId("l-fb-holder").innerHTML);
			temp.NotSignedIn();		
		});
		*/
	  FB.login();
	}
  });
  
  };

  // Load the SDK asynchronously
  (function(d){
	 var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
	 if (d.getElementById(id)) {return;}
	 js = d.createElement('script'); js.id = id; js.async = true;
	 js.src = "//connect.facebook.net/en_US/all.js";
	 ref.parentNode.insertBefore(js, ref);
   }(document));
   // Here we run a very simple test of the Graph API after login is successful. 
  // This testAPI() function is only called in those cases. 
  function testAPI() {
	console.log('Welcome!  Fetching your information.... ');
	FB.api('/me', function(response) {
		alert(response.name);
	  //console.log('Good to see you, ' + response.name + '.');
	});
  }
</script>
<script src="https://connect.facebook.net/en_US/all.js"></script>

<style>
<!--#vw-regular-login, #vw-fb-login{ float:left; width: 500px; margin: 50px 10px 0 10px;}-->
</style>
<div id="view-content">
    <div id="tp1" data-dojo-type="dijit/Fieldset" data-dojo-props="style: 'float:left; width: 500px; margin: 10px; padding: 10px;'">
        <legend>With your MySocialArea.com Credentials:</legend>
        <div id="vw-regular-login">
            <?php 
            //$this->Instructions1('default_user_login');
            echo $this->form;
             ?>
        </div>
    </div>
    <div id="tp2" data-dojo-type="dijit/Fieldset" data-dojo-props="style: 'float:left; width: 500px; margin: 10px; padding: 10px;'">
        <legend>With your Facebook Account:</legend>
        <div id="vw-fb-login">
            <fb:login-button registration-url="http://www.mysocialarea.com/default/user/register" size="xlarge" showfaces="true"></fb:login-button>
        </div>
    
    </div>
</div>
<script>
function callback_form_user_login_1()
{
  	window.location.href= "/index/index";
}
</script>